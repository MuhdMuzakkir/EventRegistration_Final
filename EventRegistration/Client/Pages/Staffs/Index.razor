@page "/staffs/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]
@using  Microsoft.AspNetCore.Authorization
@using  Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using EventRegistration.Shared.Domain

<h3 class="card-title">Event Staffs</h3>
<a href="/staffs/create" class="btn btn-secondary">
    <span class="oi oi-plus"></span>
    Create New Staff
</a>
<br />
<br />
@if (Staffs == null)
{
    <div class="alert alert-info">Loading Staffs...</div>
}
else
{
    <table class="table table-responsive"></table>
    <thead>
        <tr>
            <th>Staff Name</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var Staff in Staffs)
        {
            <tr>
                <td>@Staff.StaffName</td>
                <td>
                    <a href="/Staffs/view/@Staff.StaffID" class="btn btn=primary">
                        <span class="oi oi-book"></span>
                    </a>
                    <a href="/Staffs/edit/@Staff.StaffID" class="btn btn=warning">
                        <span class="oi oi-pencil"></span>
                    </a>
                    <button class="btn btn-danger" @onclick="@(()=>Delete(Staff.StaffID))">
                        <span class="oi oi-delete"></span>
                    </button>
                </td>
            </tr>
        }
    </tbody>

}
<br />

@code {
    private List<Staff> Staffs;

    protected async override Task OnInitializedAsync()
    {
        Staffs = await _client.GetFromJsonAsync<List<Staff>>($"api/staffs"); 
    }

    async Task Delete(int StaffID)
    {
        var Staff = Staffs.First(q => q.StaffID == StaffID);
        var confirm = await js.InvokeAsync<bool>("Confirm", $"Do you want to delete {Staff.StaffName}?");
        if (confirm)
        {
            await _client.DeleteAsync($"api/staffs/{StaffID}");
            await OnInitializedAsync();
        }
    }
}